<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by org.testng.reporters.JUnitXMLReporter -->
<testsuite ignored="16" hostname="DESKTOP-7LQLMGE" failures="0" tests="43" name="Surefire test" time="0.121" errors="0" timestamp="2021-11-26T22:36:24 EST">
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.039">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184251E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184253E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184253E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184254E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184254E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184254E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184254E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184255E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184255E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184255E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184255E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184255E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184255E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184256E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184256E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184256E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184256E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184256E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184256E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184257E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184257E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184257E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184257E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184257E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184257E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184258E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184258E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.003">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184264E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184264E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184264E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184264E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184264E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184265E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184265E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184265E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184265E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184265E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184265E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184265E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184265E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184266E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184266E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184266E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184266E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184266E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184266E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184266E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184266E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184267E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184267E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184267E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184267E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184267E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184267E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.002">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.63798418427E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184271E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184271E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.003">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184274E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184275E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184275E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184275E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184275E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184275E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184276E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184276E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184276E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184276E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184276E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184276E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184276E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184277E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184277E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184277E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184277E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184277E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184277E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184278E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184278E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184278E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184278E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184278E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184278E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184278E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184278E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184279E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184279E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184279E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184279E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184279E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184279E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.63798418428E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.63798418428E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.63798418428E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.63798418428E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.63798418428E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.63798418428E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184281E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184281E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184281E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184281E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184281E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184281E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184282E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184282E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184282E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184282E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184282E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184282E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184283E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184283E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184283E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184283E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184283E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184284E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184284E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184284E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184284E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184284E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184284E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184284E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184284E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184285E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184285E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184285E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184285E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184285E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184285E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184285E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184286E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184286E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184286E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184286E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184286E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184286E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184288E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184288E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.003">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184291E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184292E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184292E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.003">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184295E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184295E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184295E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.002">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184299E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184299E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184299E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.003">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184302E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184302E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184302E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184303E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184303E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184303E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184303E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184303E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184304E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184304E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184304E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="-1.637984184304E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184304E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184304E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184304E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod setUp" time="0.002">
    <failure type="java.lang.IllegalStateException" message="The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver">
      <![CDATA[java.lang.IllegalStateException: The driver executable must exist: C:\Users\nassi\IdeaProjects\FinalProject\CitiBank\..\Generic\drivers\chromedriver
at org.openqa.selenium.internal.Require$FileStateChecker.isFile(Require.java:315)
at org.openqa.selenium.remote.service.DriverService.checkExecutable(DriverService.java:144)
at org.openqa.selenium.remote.service.DriverService.findExecutable(DriverService.java:139)
at org.openqa.selenium.chrome.ChromeDriverService.access$000(ChromeDriverService.java:38)
at org.openqa.selenium.chrome.ChromeDriverService$Builder.findDefaultExecutable(ChromeDriverService.java:231)
at org.openqa.selenium.remote.service.DriverService$Builder.build(DriverService.java:434)
at org.openqa.selenium.chrome.ChromeDriverService.createDefaultService(ChromeDriverService.java:127)
at org.openqa.selenium.chrome.ChromeDriver.<init>(ChromeDriver.java:46)
at base.CommonAPI.getLocalDriver(CommonAPI.java:122)
at base.CommonAPI.setUp(CommonAPI.java:107)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
... Removed 36 stack frames]]>
    </failure>
  </testcase> <!-- @BeforeMethod setUp -->
  <testcase classname="base.CommonAPI" name="@BeforeMethod startExtent" time="-1.637984184308E9">
    <skipped/>
  </testcase> <!-- @BeforeMethod startExtent -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterEachTestMethod" time="-1.637984184308E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterEachTestMethod -->
  <testcase classname="base.CommonAPI" name="@AfterMethod afterMethod" time="-1.637984184308E9">
    <skipped/>
  </testcase> <!-- @AfterMethod afterMethod -->
  <testcase classname="test.TestAAdvantageExecutiveWorldElite" name="TestCitiRewardsCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestCitiRewardsCreditCard -->
  <testcase classname="test.TestAAdvantageExecutiveWorldElite" name="TestCostcoBusinessCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestCostcoBusinessCreditCard -->
  <testcase classname="test.TestAAdvantageExecutiveWorldElite" name="TestCostcoVisaCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestCostcoVisaCreditCard -->
  <testcase classname="test.TestAAdvantageExecutiveWorldElite" name="TestCustomerCash" time="0.0">
    <skipped/>
  </testcase> <!-- TestCustomerCash -->
  <testcase classname="test.TestAAdvantageExecutiveWorldElite" name="TestDiamondCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestDiamondCreditCard -->
  <testcase classname="test.TestAAdvantageExecutiveWorldElite" name="TestDoubleCashCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestDoubleCashCreditCard -->
  <testcase classname="test.TestAAdvantageExecutiveWorldElite" name="test" time="0.0">
    <skipped/>
  </testcase> <!-- test -->
  <testcase classname="test.TestCreditCards" name="TestCitiRewardsCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestCitiRewardsCreditCard -->
  <testcase classname="test.TestCreditCards" name="TestCostcoBusinessCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestCostcoBusinessCreditCard -->
  <testcase classname="test.TestCreditCards" name="TestCustomerCash" time="0.0">
    <skipped/>
  </testcase> <!-- TestCustomerCash -->
  <testcase classname="test.TestCreditCards" name="TestD_Card" time="0.0">
    <skipped/>
  </testcase> <!-- TestD_Card -->
  <testcase classname="test.TestCreditCards" name="TestDoubleCashCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestDoubleCashCreditCard -->
  <testcase classname="test.TestCreditCards" name="TestVisaCreditCard" time="0.0">
    <skipped/>
  </testcase> <!-- TestVisaCreditCard -->
  <testcase classname="test.TestCreditCards" name="test" time="0.0">
    <skipped/>
  </testcase> <!-- test -->
  <testcase classname="test.TestGetHelp" name="getInfo" time="0.0">
    <skipped/>
  </testcase> <!-- getInfo -->
  <testcase classname="test.TestHomePage" name="test1" time="0.0">
    <skipped/>
  </testcase> <!-- test1 -->
  <testcase classname="test.TestHomePage" name="test10" time="0.0">
    <skipped/>
  </testcase> <!-- test10 -->
  <testcase classname="test.TestHomePage" name="test11" time="0.0">
    <skipped/>
  </testcase> <!-- test11 -->
  <testcase classname="test.TestHomePage" name="test12" time="0.0">
    <skipped/>
  </testcase> <!-- test12 -->
  <testcase classname="test.TestHomePage" name="test13" time="0.0">
    <skipped/>
  </testcase> <!-- test13 -->
  <testcase classname="test.TestHomePage" name="test14" time="0.0">
    <skipped/>
  </testcase> <!-- test14 -->
  <testcase classname="test.TestHomePage" name="test15" time="0.0">
    <skipped/>
  </testcase> <!-- test15 -->
  <testcase classname="test.TestHomePage" name="test16" time="0.0">
    <skipped/>
  </testcase> <!-- test16 -->
  <testcase classname="test.TestHomePage" name="test17" time="0.0">
    <skipped/>
  </testcase> <!-- test17 -->
  <testcase classname="test.TestHomePage" name="test18" time="0.0">
    <skipped/>
  </testcase> <!-- test18 -->
  <testcase classname="test.TestHomePage" name="test19" time="0.0">
    <skipped/>
  </testcase> <!-- test19 -->
  <testcase classname="test.TestHomePage" name="test2" time="0.0">
    <skipped/>
  </testcase> <!-- test2 -->
  <testcase classname="test.TestHomePage" name="test20" time="0.0">
    <skipped/>
  </testcase> <!-- test20 -->
  <testcase classname="test.TestHomePage" name="test3" time="0.0">
    <skipped/>
  </testcase> <!-- test3 -->
  <testcase classname="test.TestHomePage" name="test4" time="0.0">
    <skipped/>
  </testcase> <!-- test4 -->
  <testcase classname="test.TestHomePage" name="test5" time="0.0">
    <skipped/>
  </testcase> <!-- test5 -->
  <testcase classname="test.TestHomePage" name="test6" time="0.0">
    <skipped/>
  </testcase> <!-- test6 -->
  <testcase classname="test.TestHomePage" name="test7" time="0.0">
    <skipped/>
  </testcase> <!-- test7 -->
  <testcase classname="test.TestHomePage" name="test8" time="0.0">
    <skipped/>
  </testcase> <!-- test8 -->
  <testcase classname="test.TestHomePage" name="test9" time="0.0">
    <skipped/>
  </testcase> <!-- test9 -->
  <testcase classname="test.TestOpenAccount" name="newAccount" time="0.0">
    <skipped/>
  </testcase> <!-- newAccount -->
  <testcase classname="test.TestQuickLink" name="knowleg" time="0.0">
    <skipped/>
  </testcase> <!-- knowleg -->
  <testcase classname="test.TestRespondToMailOffer" name="respond" time="0.0">
    <skipped/>
  </testcase> <!-- respond -->
  <testcase classname="test.TestSingon" name="ActivatTheCard" time="0.0">
    <skipped/>
  </testcase> <!-- ActivatTheCard -->
  <testcase classname="test.TestSingon" name="mobileSign" time="0.0">
    <skipped/>
  </testcase> <!-- mobileSign -->
  <testcase classname="test.TestSingon" name="recoverAccount" time="0.0">
    <skipped/>
  </testcase> <!-- recoverAccount -->
  <testcase classname="test.TestSingon" name="signOninfo" time="0.0">
    <skipped/>
  </testcase> <!-- signOninfo -->
  <testcase classname="test.TestSpecialOffer" name="offers" time="0.0">
    <skipped/>
  </testcase> <!-- offers -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase classname="base.CommonAPI" name="@BeforeSuite extentSetup" time="0.0">
    <ignored/>
  </testcase> <!-- @BeforeSuite extentSetup -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
  <testcase classname="base.CommonAPI" name="@AfterSuite generateReport" time="0.0">
    <ignored/>
  </testcase> <!-- @AfterSuite generateReport -->
</testsuite> <!-- Surefire test -->
